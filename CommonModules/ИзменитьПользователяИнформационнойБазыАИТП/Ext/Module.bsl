//////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Реализация действий бизнес-процесса ИзменитьПользователяИнформационнойБазыАИТП
//
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Реализация регламентного задания для отправки http-запросов
//
Процедура ИзменитьПользователейИнформационнойБазыАИТП() Экспорт
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ВыполнитьДействияПоТочкеМаршрута(
		БизнесПроцессы.ИзменитьПользователяИнформационнойБазыАИТП.ТочкиМаршрута.ИзменитьПользователяИнформационнойБазы
		, "ИзменитьПользователяИнформационнойБазыАИТП.ОбработчикВыполнитьДействиеИзменитьПользователяИнформационнойБазы"
		, // Обработчик перед выполнением действий
		, // Обработчик после выполнения действий
		, // Обработчик ошибки при выполнении действия
		, // Обработчик ошибки перед выполнением действий
		, // Обработчик ошибки после выполнения действий
		, // Обработчик оповещения при выполнении действия
		, // Обработчик оповещения перед выполнением действий
		, // Обработчик оповещения после выполнения действий
	);

КонецПроцедуры

// Реализация действия изменения пользователя информационной базы
//
Процедура ОбработчикВыполнитьДействиеИзменитьПользователяИнформационнойБазы(ТочкаМаршрута, Задача, ПараметрыВыполнения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	БизнесПроцесс = Задача.БизнесПроцесс;
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(БизнесПроцесс.УникальныйИдентификатор));
	
	Если БизнесПроцесс.ИзменитьИмя = Истина Тогда
		ПользовательИБ.Имя = БизнесПроцесс.Имя;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьПолноеИмя = Истина Тогда
		ПользовательИБ.ПолноеИмя = БизнесПроцесс.ПолноеИмя;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьАутентификацияСтандартная = Истина Тогда
		ПользовательИБ.АутентификацияСтандартная = БизнесПроцесс.АутентификацияСтандартная;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьПароль = Истина Тогда
		ПользовательИБ.Пароль = КонфиденциальныеДанныеАИТП.ПолучитьКонфиденциальныеДанныеКакСтроку(БизнесПроцесс);
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьПоказатьВСпискеВыбора = Истина Тогда
		ПользовательИБ.ПоказыватьВСпискеВыбора = БизнесПроцесс.ПоказыватьВСпискеВыбора;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьЗапрещеноИзменятьПароль = Истина Тогда
		ПользовательИБ.ЗапрещеноИзменятьПароль = БизнесПроцесс.ЗапрещеноИзменятьПароль;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьАутентификацияOpenID = Истина Тогда
		ПользовательИБ.АутентификацияOpenID = БизнесПроцесс.АутентификацияOpenID;
	КонецЕсли;	
	
	Если БизнесПроцесс.ИзменитьЗащитаОтОпасныхДействий = Истина Тогда
		ПользовательИБ.ЗащитаОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = БизнесПроцесс.ПредупреждатьОбОпасныхДействиях;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьАутентификацияОС = Истина Тогда
		ПользовательИБ.АутентификацияОС = БизнесПроцесс.АутентификацияОС;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьПользовательОС = Истина Тогда
		ПользовательИБ.ПользовательОС = БизнесПроцесс.ПользовательОС;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьЯзык = Истина Тогда
		Язык = Метаданные.Языки.Найти(БизнесПроцесс.Язык);
		Если Не Язык = Неопределено Тогда
			ПользовательИБ.Язык = Язык;
		КонецЕсли;
	КонецЕсли;
	
	Если БизнесПроцесс.ИзменитьРоли = Истина Тогда
		ПользовательИБ.Роли.Очистить();
		
		Для каждого Роль Из БизнесПроцесс.Роли Цикл
			ПользовательИб.Роли.Добавить(Метаданные.Роли.Найти(Роль.Роль));
		КонецЦикла;
	КонецЕсли;
	
	ПользовательИБ.Записать();
	
КонецПроцедуры

#КонецОбласти