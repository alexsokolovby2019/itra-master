///////////////////////////////////////////////////////////////////////////////////
//
// Обработчики действий бизнес-процесса ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП
//
//////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Обработчик действия УдалитьРезультатыЗаданийСервисаOneScript
//
// Параметры:
//  ТочкаМаршрута  - БизнесПроцессы.УдалитьРезультатыЗаданийСервисаOneScriptАИТП.ТочкиМаршрута.УдалитьРезультатыЗаданийСервисаOneScript - точка маршрута действия
//  Задача  - ЗадачаСсылка.ЗадачаАИТП - Ссылка на выполняемую задачу
//  ПараметрыВыполнения  - Соответствие - параметры выполнения
//
Процедура УдалитьРезультатыЗаданийСервисаOneScript(ТочкаМаршрута, Задача, ПараметрыВыполнения) Экспорт
	// Вставить содержимое обработчика.
	БизнесПроцесс = Задача.БизнесПроцесс;
	
	МенеджерЗаписи = РегистрыСведений.НастройкиУдаленияРезультатовЗаданийСервисовOneScriptАИТП.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Сервис = БизнесПроцесс.Сервис;
	МенеджерЗаписи.Прочитать();
		
	//OneScriptАИТП.УдалитьРезультатыВыполненияЗаданийСозданныхДоПериода(МенеджерЗаписи.ПериодУдаления, БизнесПроцесс.Сервис);
	
	Параметры = Новый Массив;
	Параметры.Добавить(МенеджерЗаписи.ПериодУдаления);
	Результат = OneScriptАИТП.ВыполнитьМетод("ITPA.УдалитьРезультатыВыполненияЗаданийСозданныхДоПериода",Параметры , Ложь,, БизнесПроцесс.Сервис);
	
	Если Результат["БылиОшибки"] = Истина Тогда
		Задача.Результат = Перечисления.РезультатыВыполненияДействияАИТП.Отрицательный;
		Задача.ОписаниеРезультата = Результат["ОписаниеОшибки"];	
	Иначе
		Задача.Результат = Перечисления.РезультатыВыполненияДействияАИТП.Положительный;
	КонецЕсли;
	
	Задача.ДальнейшиеДействия = Перечисления.ДальнейшиеДействияАИТП.Продолжить;
	Задача.Записать();
	
КонецПроцедуры

#КонецОбласти
