//////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Функции интеграции с http-сервисами OneScript
//
/////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет фрагмент кода в среде выполнения OneScript
//
// Параметры:
//  НастройкиHTTPСервиса - Справочник.НастройкиHTTPСервисовАИТП	 - настройки соединения с http-сервисом
//  СкриптБлок			 - Строка	 - фрагмент кода для выполнения 
//  Параметры			 - Массив	 - передаваемые параметры
//  ВозвращатьПараметры	 - Булево	 - определяет, будут ли возвращаться значения параметров после выполнения
// 
// Возвращаемое значение:
//   Соответствие, Массив - Возвращает объект, содержащий результаты выполнения фрагмента кода
//
Функция ВыполнитьСкрипт(СкриптБлок, Параметры = Неопределено, ВыполнитьАсинхронно = Ложь, ВозвращатьПараметры = Ложь, НастройкиСервиса = Неопределено) Экспорт
	
	Если НастройкиСервиса = Неопределено Или НастройкиСервиса = Справочники.СервисыOneScriptАИТП.ПустаяСсылка() Тогда
		НастройкиСервиса = Константы.ФермаOneScriptПоУмолчаниюАИТП.Получить();
	КонецЕсли;
	
	НастройкиHTTPСервиса = НастройкиСервиса.СервисВыполненияСкриптов;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	
	ДанныеТело = Новый Соответствие;
	ДанныеТело.Вставить("СкриптБлок", СкриптБлок);
	ДанныеТело.Вставить("Параметры", Параметры);
	ДанныеТело.Вставить("ВозвращатьПараметры", ВозвращатьПараметры);
	ДанныеТело.Вставить("ВыполнитьАсинхронно", ВыполнитьАсинхронно);
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеТело);
	
	Ответ = ФункцииHttpАИТП.ОтправитьЗапрос(
		"POST"
		, НастройкиHTTPСервиса.URLСервиса
		, НастройкиHTTPСервиса.НастройкиHTTPСоединения
		, ЗаписьJSON.Закрыть()
		, Заголовки
		);
		
	ФункцииHttpАИТП.ПроверитьКодСостояния(Ответ, 200, "Ошибка при выполнении http запроса. Функция:OneScriptАИТП.ВыполнитьСкрипт.");
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(Ответ.ТелоОтвета);
	
	Возврат ПрочитатьJSON(ЧтениеJSON, Истина);
	
КонецФункции

// Вызывает метод в среде выполнения OneScript
//
// Параметры:
//  НастройкиHTTPСервиса - Справочник.НастройкиHTTPСервисовАИТП	 - настройки http-соединения для выполнения запроса
//  ИмяМетода			 - Строка	 - имя выполняемого метода
//  Параметры			 - Массив	 - Массив передаваемых параметров
//  ВозвращатьПараметры	 - Булево	 - Определяет, будут ли возвращаться значения параметров
//  ВозвращаетЗначение	 - Булево	 - Определяет возвращает ли метод значение или это процедура
// 
// Возвращаемое значение:
//   - Соответствие, Массив - Возвращает объект, содержащий возвращаемые данные. Имеет тип Соответствие или Массив
//
Функция ВыполнитьМетод(ИмяМетода, Параметры = Неопределено, ВозвращаетЗначение = Ложь, ВозвращатьПараметры = Ложь, НастройкиСервиса = Неопределено) Экспорт
	
	Если НастройкиСервиса = Неопределено Или НастройкиСервиса = Справочники.СервисыOneScriptАИТП.ПустаяСсылка() Тогда
		НастройкиСервиса = Константы.ФермаOneScriptПоУмолчаниюАИТП.Получить();
	КонецЕсли;
	НастройкиHTTPСервиса = НастройкиСервиса.СервисВыполненияМетодов;
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	
	ДанныеТело = Новый Соответствие;
	ДанныеТело.Вставить("ИмяМетода", ИмяМетода);
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Массив;
	КонецЕсли;
	
	ДанныеТело.Вставить("Параметры", Параметры);
	ДанныеТело.Вставить("ВозвращатьПараметры", ВозвращатьПараметры);
	ДанныеТело.Вставить("ВозвращаетЗначение", ВозвращаетЗначение);
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеТело);
	
	Ответ = ФункцииHttpАИТП.ОтправитьЗапрос(
		"POST"
		, НастройкиHTTPСервиса.URLСервиса
		, НастройкиHTTPСервиса.НастройкиHTTPСоединения
		, ЗаписьJSON.Закрыть()
		, Заголовки
		);
		
	ФункцииHttpАИТП.ПроверитьКодСостояния(Ответ, 200, "Ошибка при выполнении http запроса. Функция:OneScriptАИТП.ВыполнитьМетод.");
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(Ответ.ТелоОтвета);
	
	Возврат ПрочитатьJSON(ЧтениеJSON, Истина);
	
КонецФункции

// Проверяет состояние задания на предмет его активности
//
// Параметры:
//  Задание  - Соответствие - параметры выполняющегося задания
//
// Возвращаемое значение:
//   Булево   - Истина, если задание выполняется
//
Функция ЗаданиеАктивно(Задание) Экспорт

	НастройкиСервиса = ПолучитьНастройкиСервисаПоURL(Задание["URLСервиса"]);	
	Параметры = Новый Массив;
	Параметры.Добавить(Задание["ИдентификаторЗадания"]);
	ДанныеОтвет = OneScriptАИТП.ВыполнитьМетод("ITPA.ЗаданиеАктивно",Параметры , Истина,,НастройкиСервиса);
	Если ДанныеОтвет["БылиОшибки"] Тогда
		ВызватьИсключение ДанныеОтвет["ОписаниеОшибки"];
	КонецЕсли;
	
	Возврат ДанныеОтвет["Результат"];
	
КонецФункции

// Получает результат выполнения фонового задания
//
// Параметры:
//  Ключ  - Строка - идентификатор данных
//
// Возвращаемое значение:
//   Соответствие   - результат выполнения фонового задания
//
Функция ПолучитьРезультатВыполненияЗадания(Задание) Экспорт

	НастройкиСервиса = ПолучитьНастройкиСервисаПоURL(Задание["URLСервиса"]);	
	Параметры = Новый Массив;
	Параметры.Добавить(Задание["Ключ"]);
	ДанныеОтвет = OneScriptАИТП.ВыполнитьМетод("ITPA.ПолучитьРезультатВыполненияЗадания",Параметры , Истина,,НастройкиСервиса);
	Если ДанныеОтвет["БылиОшибки"] Тогда
		ВызватьИсключение ДанныеОтвет["ОписаниеОшибки"];
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ДанныеОтвет["Результат"]);
	
	Возврат ПрочитатьJSON(ЧтениеJSON, Истина);

КонецФункции

// Удаляет результат выполнения фонового задания
//
// Параметры:
//  Задание  - Соответствие - параметры выполняющегося задания
//
Процедура УдалитьРезультатВыполненияЗадания(Задание) Экспорт

	НастройкиСервиса = ПолучитьНастройкиСервисаПоURL(Задание["URLСервиса"]);	
	Параметры = Новый Массив;
	Параметры.Добавить(Задание["Ключ"]);
	ДанныеОтвет = OneScriptАИТП.ВыполнитьМетод("ITPA.УдалитьРезультатВыполненияЗадания",Параметры , Ложь,,НастройкиСервиса);
	
	Если ДанныеОтвет["БылиОшибки"] Тогда
		ВызватьИсключение ДанныеОтвет["ОписаниеОшибки"];
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьРезультатыВыполненияЗаданийСозданныхДоПериода(ПериодСекунды, Сервис) Экспорт
	
	Параметры = Новый Массив;
	Параметры.Добавить(ПериодСекунды);
	ДанныеОтвет = OneScriptАИТП.ВыполнитьМетод("ITPA.УдалитьРезультатыВыполненияЗаданийСозданныхДоПериода",Параметры , Ложь,, Сервис);
	
	Если ДанныеОтвет["БылиОшибки"] Тогда
		ВызватьИсключение ДанныеОтвет["ОписаниеОшибки"];
	КонецЕсли;

КонецПроцедуры

// Получает настройки http-сервиса по его url
//
// Параметры:
//  URL  - Строка - url сервиса
//
// Возвращаемое значение:
//   СправочникСсылка.НастройкиHTTPСервиса   - настройки сервиса
//
Функция ПолучитьНастройкиСервисаПоURL(URL) Экспорт

	Возврат Справочники.СервисыOneScriptАИТП.НайтиПоКоду(URL);

КонецФункции
 
#КонецОбласти