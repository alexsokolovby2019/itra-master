///////////////////////////////////////////////////////////////////////////////////////
//
// Функции оповещения пользователей по электронной почте
//
//////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура - Оповестить пользователей
//
// Параметры:
//  ПолучателиОповещения - Массив - список получателей оповещения 
//  ПараметрыОповещения	 - Структура - содержит параметры оповещения 
//
Процедура ОповеститьПользователей(ПолучателиОповещения, ПараметрыОповещения) Экспорт
	
	Тема = Неопределено;
	Тело = Неопределено;
	
	ЗаполнитьТемуИТелоСообщения(Тема, Тело, ПараметрыОповещения);	
	
	Если Тема = Неопределено И Тело = Неопределено Тогда 
		Возврат;
	ИначеЕсли Тема = Неопределено Тогда
		Тема = "";
	ИначеЕсли Тело = Неопределено Тогда
		Тело = "";
	КонецЕсли;
	
	БП = БизнесПроцессы.ОтправитьСообщениеПоЭлектроннойПочтеАИТП.СоздатьБизнесПроцесс();
	БП.Дата = ТекущаяДата();
	БП.Тело = Тело;
	БП.Тема = Тема;
	БП.ТипТекстаСообщения = Константы.ТипТекстаСообщенийЭлектроннойПочтыАИТП.Получить();
		
	Для каждого Получатель Из ПолучателиОповещения Цикл
		СтрокаПолучатель = БП.Получатели.Добавить();
		СтрокаПолучатель.Получатель = Получатель;
	КонецЦикла;
		
	БП.Записать();
	БизнесПроцессыАИТП.ЗарегистрироватьДляВыполнения(БП);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет тему и тело сообщения
//
Процедура ЗаполнитьТемуИТелоСообщения(Тема, Тело, ПараметрыОповещения) Экспорт
	
	СтандартнаяОбработка = Истина;
	ОповещениеПользователейПоЭлектроннойПочтеПереопределяемыйАИТП.ЗаполнитьТемуИТелоСообщения(Тема, Тело, ПараметрыОповещения, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка = Истина Тогда
		ЗаполнитьТемуИТелоСообщенияСтандартнаяОбработка(Тема, Тело, ПараметрыОповещения);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет тему и тело задач вида ОбработкаОшибки
//
Процедура ЗаполнитьТемуИТелоПриСозданииЗадачиОбработкаОшибки(Тема, Тело, Задача, ПараметрыОповщения, Макет)
	
	ОбластьТема = ТекстовыеШаблоныВызовСервераАИТП.ПолучитьОбласть(Макет, "<!--ТемаЗадачаОбработатьОшибку-->", "<!--ТемаЗадачаОбработатьОшибку-->");
	ОбластьТело = ТекстовыеШаблоныВызовСервераАИТП.ПолучитьОбласть(Макет, "<!--ТелоЗадачаОбработатьОшибку-->", "<!--ТелоЗадачаОбработатьОшибку-->");
	ПараметрыЗаполнения = Новый Соответствие;

	// Получаем задачу с ошибкой
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗадачаАИТП.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Задача.ЗадачаАИТП КАК ЗадачаАИТП
	                      |ГДЕ
	                      |	ЗадачаАИТП.Ошибка = &Ошибка
	                      |	И ЗадачаАИТП.БизнесПроцесс = &БизнесПроцесс");
	
	Запрос.УстановитьПараметр("Ошибка", Задача.ОшибкаДляОбработки);
	Запрос.УстановитьПараметр("БизнесПроцесс", Задача.БизнесПроцесс);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПараметрыЗаполнения.Вставить("ИмяЗадачиСОшибкой", Строка(Выборка.Ссылка.ТочкаМаршрута));
	КонецЕсли;
	
	ПараметрыЗаполнения.Вставить("ИмяПроцесса", Строка(ТипЗнч(Задача.БизнесПроцесс)));
	ПараметрыЗаполнения.Вставить("ИмяПроцесса", Строка(ТипЗнч(Задача.БизнесПроцесс)));
	ПараметрыЗаполнения.Вставить("НавигационнаяСсылкаЗадачаОбработкиОшибки"
		, НавигационныеСсылкиАИТП.ПолучитьUrl(Задача)
	);
	
	Тема = ТекстовыеШаблоныВызовСервераАИТП.ЗаполнитьПараметры(ОбластьТема.Текст, ПараметрыЗаполнения);
	Тело = ТекстовыеШаблоныВызовСервераАИТП.ЗаполнитьПараметры(ОбластьТело.Текст, ПараметрыЗаполнения);
	
КонецПроцедуры

// Стандартное заполнение темы и тела сообщения
//
Процедура ЗаполнитьТемуИТелоСообщенияСтандартнаяОбработка(Тема, Тело, ПараметрыОповещения) Экспорт
	
	МоментСоздания = ПараметрыОповещения.Получить("МоментСоздания");
	ВидОповещения = ПараметрыОповещения.Получить("ВидОповещения");
	БизнесПроцесс = ПараметрыОповещения.Получить("БизнесПроцесс");
	ТочкаМаршрута = ПараметрыОповещения.Получить("ТочкаМаршрута");
	Задача = ПараметрыОповещения.Получить("Задача");

	Если Константы.ТипТекстаСообщенийЭлектроннойПочтыАИТП.Получить() = Перечисления.ТипыТекстаСообщенийЭлектроннойПочтыАИТП.ПростойТекст Тогда
		ИмяМакета = "ТекстовоеОповещениеПоУмолчаниюАИТП";
	Иначе
		ИмяМакета = "HtmlОповещениеПоУмолчаниюАИТП";
	КонецЕсли;
	
	Макет = ПолучитьОбщийМакет(ИмяМакета).ПолучитьТекст();
	ОбластьТема = ТекстовыеШаблоныВызовСервераАИТП.ПолучитьОбласть(Макет, "<!--Тема-->", "<!--Тема-->");
	ОбластьТело = ТекстовыеШаблоныВызовСервераАИТП.ПолучитьОбласть(Макет, "<!--Тело-->", "<!--Тело-->");
	
	ПараметрыЗаполнения = Новый Соответствие;
	
	
	ПараметрыЗаполнения.Вставить("ВидОповещения", ВидОповещения);
	ПараметрыЗаполнения.Вставить("МоментСоздания", НРег(МоментСоздания));
	
	Если Не Задача = Неопределено Тогда
		ПараметрыЗаполнения.Вставить("ТочкаМаршрута", ТочкаМаршрута);
		ПараметрыЗаполнения.Вставить("НавигационнаяСсылка", НавигационныеСсылкиАИТП.ПолучитьUrl(Задача));
	ИначеЕсли Не БизнесПроцесс = Неопределено Тогда
		ПараметрыЗаполнения.Вставить("ТочкаМаршрута", СтрЗаменить(Строка(ТипЗнч(БизнесПроцесс)), "Бизнес-процесс объект:", ""));
		ПараметрыЗаполнения.Вставить("НавигационнаяСсылка", НавигационныеСсылкиАИТП.ПолучитьUrl(БизнесПроцесс));
	КонецЕсли;
	
	Тема = ТекстовыеШаблоныВызовСервераАИТП.ЗаполнитьПараметры(ОбластьТема.Текст, ПараметрыЗаполнения);
	Тело = ТекстовыеШаблоныВызовСервераАИТП.ЗаполнитьПараметры(ОбластьТело.Текст, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти