///////////////////////////////////////////////////////////////////////////////////
//
// Функции для работы с дополнительными данными объектов
//
//////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура - помещает дополнительные данные в регистр сведений
//
// Параметры:
//  Владелец - ОбъектСсылка - объект-владелец данных (к примеру - элемент справочника) 
//  Ключ	 - Строка - уникальный строковый ключ, идентифицирующий данные 
//  Данные	 - Произвольный - соответствие, содержит данные в полях 
//
Процедура ВставитьДополнительныеДанные(Владелец, Ключ, Данные) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = РегистрыСведений.ДополнительныеДанныеАИТП.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Владелец = Владелец;
	МенеджерЗаписи.Прочитать();
	
	Если Не МенеджерЗаписи.Выбран() Тогда
		ХранимыеДанные = Новый Соответствие;
	Иначе
		ХранимыеДанные = МенеджерЗаписи.Данные.Получить();
	КонецЕсли;
	
	ХранимыеДанные.Вставить(Ключ, Данные);
	МенеджерЗаписи.Владелец = Владелец;
	МенеджерЗаписи.Данные = Новый ХранилищеЗначения(ХранимыеДанные);
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры

// Процедура - Удаляет данные, связанные с объектом по ключу
//
// Параметры:
//  Владелец - ОбъектСсылка - ссылка на объект-владелец данных 
//  Ключ	 - Строка - идентификатор данных 
//
Процедура УдалитьДополнительныеДанные(Владелец, Ключ = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = РегистрыСведений.ДополнительныеДанныеАИТП.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Владелец = Владелец;
	МенеджерЗаписи.Прочитать();
	
	Если Не МенеджерЗаписи.Выбран() Тогда
		Возврат;
	КонецЕсли;
	
	Если Ключ = Неопределено Тогда
		МенеджерЗаписи.Удалить();
		Возврат;
	КонецЕсли;
	
	ХранимыеДанные = МенеджерЗаписи.Данные.Получить();
	
	Если Не ХранимыеДанные.Получить(Ключ) = Неопределено Тогда
		ХранимыеДанные.Удалить(Ключ);
	КонецЕсли;
	
	МенеджерЗаписи.Данные = Новый ХранилищеЗначения(ХранимыеДанные);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Функция - получает данные по ключу
//
// Параметры:
//  Владелец - ОбъектСсылка - ссылка на объект-владелец данных 
//  Ключ	 - Строка - идентификатор данных 
// 
// Возвращаемое значение:
//   -  Произвольный - возвращает сохраненные данные
//
Функция ПолучитьДополнительныеДанные(Владелец, Ключ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = РегистрыСведений.ДополнительныеДанныеАИТП.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Владелец = Владелец;
	МенеджерЗаписи.Прочитать();
	
	Если Не МенеджерЗаписи.Выбран() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ХранимыеДанные = МенеджерЗаписи.Данные.Получить();
	Данные = ХранимыеДанные.Получить(Ключ);
	
	Если Данные = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат Данные;
	КонецЕсли;
	
КонецФункции
	
#КонецОбласти 

