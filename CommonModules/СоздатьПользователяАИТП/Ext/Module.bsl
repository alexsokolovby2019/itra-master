//////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Реализация действий бизнес-процесса СоздатьПользователяАИТП
//
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Реализация регламентного задания для отправки http-запросов
//
Процедура СоздатьПользователейАИТП() Экспорт
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ВыполнитьДействияПоТочкеМаршрута(
		БизнесПроцессы.СоздатьПользователяАИТП.ТочкиМаршрута.СоздатьПользователяАИТП
		, "СоздатьПользователяАИТП.ОбработчикВыполнитьДействиеСоздатьПользователяАИТП"
		, // Обработчик перед выполнением действий
		, // Обработчик после выполнения действий
		, // Обработчик ошибки при выполнении действия
		, // Обработчик ошибки перед выполнением действий
		, // Обработчик ошибки после выполнения действий
		, // Обработчик оповещения при выполнении действия
		, // Обработчик оповещения перед выполнением действий
		, // Обработчик оповещения после выполнения действий
	);

КонецПроцедуры

// Реализация действия изменения пользователя информационной базы
//
Процедура ОбработчикВыполнитьДействиеСоздатьПользователяАИТП(ТочкаМаршрута, Задача, ПараметрыВыполнения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	БизнесПроцесс = Задача.БизнесПроцесс;
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(БизнесПроцесс.УникальныйИдентификатор));
	Наименование = ПользовательИБ.ПолноеИмя;
	
	Если Не БизнесПроцесс.Наименование = "" Тогда
		Наименование = БизнесПроцесс.Наименование;
	КонецЕсли;
	
	ПользовательАИТП = Справочники.ПользователиАИТП.СоздатьЭлемент();
	ПользовательАИТП.Код = БизнесПроцесс.УникальныйИдентификатор;
	ПользовательАИТП.Наименование = Наименование;
	ПользовательАИТП.Записать();
	
КонецПроцедуры

#КонецОбласти