///////////////////////////////////////////////////////////////////////////////
//
// Содержит функции работы с областями текста aka шаблонами
//
///////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Подставляет значения из соответствия, в текст, если значение ключа совпадает с подстрокой в тексте
//
// Параметры:
//  ТекстШаблона - Строка	 - текст шаблона
//  Параметры	 - Структура, Соответствие	 -  Список параметров, значения которых подставляются в шаблон
//  Префикс		 - Строка	 - признак начала имени параметра в шаблоне 
//  Постфикс	 - Строка	 - признак окончания имени параметра в шаблоне
// 
// Возвращаемое значение:
//   -  Строка - Текст шаблона с заполненными значениями параметров
//
Функция ЗаполнитьПараметры(Знач ТекстШаблона, Параметры, Префикс = "{{", Постфикс = "}}") Экспорт

	Для Каждого Параметр Из Параметры Цикл
		ТекстШаблона = СтрЗаменить(ТекстШаблона, Префикс + Параметр.Ключ + Постфикс, Строка(Параметр.Значение));
	КонецЦикла;

	Возврат ТекстШаблона;

КонецФункции

// Удаляет подстроки, начинающиеся с префикса и заканчивающиеся постфиксом из текста
//
// Параметры:
//  ТекстШаблона - Строка	 - текст шаблона
//  Префикс		 - Строка	 - признак начала имени параметра в шаблоне
//  Постфикс	 - Строка	 - признак окончания имени параметра в шаблоне
// 
// Возвращаемое значение:
//   - Строка - текст шаблона, где подстроки вида ПрефиксИмяПараметраПостфикс удалены
//
Функция УдалитьНезаполненныеПараметры(ТекстШаблона, Префикс = "{{", Постфикс = "}}") Экспорт

	ИндексНачала = СтрНайти(ТекстШаблона, Префикс);
	
	Пока ИндексНачала > 0 Цикл
		
		ИндексОкончания = СтрНайти(ТекстШаблона, Постфикс, , ИндексНачала + СтрДлина(Префикс));
		
		Если ИндексОкончания = 0 Тогда
        	Возврат ТекстШаблона;
        Иначе
        	ИндексОкончания = ИндексОкончания + СтрДлина(Постфикс);
        КонецЕсли;
			
		ТекстШаблона = Лев(ТекстШаблона, ИндексНачала - 1) + Прав(ТекстШаблона, СтрДлина(ТекстШаблона) - ИндексОкончания + 1);
        ИндексНачала = СтрНайти(ТекстШаблона, Префикс);
		
	КонецЦикла;
	
	Возврат ТекстШаблона;
	
КонецФункции

// Получает область из текста, которая начинается с МаркерНачала и оканчивается МаркерОкончания
//
// Параметры:
//  ТекстШаблона	 - Строка	 - текст шаблона
//  МаркерНачала	 - Строка	 - маркер начала области
//  МаркерОкончания	 - 	Строка - маркер окончания области
//  НомерВхождения	 - Число	 - номер вхождения области в шаблоне
//  НачальнаяПозиция - Число	 - начальная позиция с которой начинается поиск
// 
// Возвращаемое значение:
//   -  Структура - содержит поля: ИндексНачала, ИндексОкончания, Текст 
//
Функция ПолучитьОбласть(ТекстШаблона, МаркерНачала, МаркерОкончания,  НомерВхождения = 1, НачальнаяПозиция = 1) Экспорт

	ИндексНачала = СтрНайти(ТекстШаблона, МаркерНачала, , НачальнаяПозиция, НомерВхождения);
	
	Если ИндексНачала = 0 Тогда
		Возврат Неопределено;
	Иначе
		ИндексНачала = ИндексНачала + СтрДлина(МаркерНачала);  
	КонецЕсли;
	
	ИндексОкончания = СтрНайти(ТекстШаблона, МаркерОкончания, , ИндексНачала);
	
	Если ИндексОкончания = 0 Тогда
		ИндексОкончания = СтрДлина(ТекстШаблона);
	Иначе
		ИндексОкончания = ИндексОкончания - 1;
	КонецЕсли;
	
	КоличествоСимволов = ИндексОкончания - ИндексНачала + 1;
	
	СтруктураОбласть = Новый Структура;
	СтруктураОбласть.Вставить("ИндексНачала", ИндексНачала);
	СтруктураОбласть.Вставить("ИндексОкончания", ИндексОкончания);
	СтруктураОбласть.Вставить("Текст", Сред(ТекстШаблона, ИндексНачала, КоличествоСимволов));
	
	Возврат СтруктураОбласть;
	
КонецФункции

#КонецОбласти