///////////////////////////////////////////////////////////////////////////////////
//
// Функции удаления результатов асинхронных заданий сервисов OneScript
//
//////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Процедура - обработчик регламентного задания УдалитьРезультатыЗаданийСервисовOneScriptАИТП
//
Процедура УдалитьРезультатыЗаданийСервисовOneScriptАИТП() Экспорт
	// Вставить содержимое обработчика.
	Если Не Константы.РазрешитьУдалениеРезультатовАсинхронныхЗаданийOneScriptАИТП.Получить() = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НастройкиУдаленияРезультатовЗаданийСервисовOneScriptАИТП.Сервис КАК Ссылка
	                      |ИЗ
	                      |	РегистрСведений.НастройкиУдаленияРезультатовЗаданийСервисовOneScriptАИТП КАК НастройкиУдаленияРезультатовЗаданийСервисовOneScriptАИТП
	                      |ГДЕ
	                      |	НастройкиУдаленияРезультатовЗаданийСервисовOneScriptАИТП.Сервис.ПометкаУдаления = &ПометкаУдаления");
	
	Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Параметры = Новый Массив;
		Параметры.Добавить(Выборка.Ссылка);
		
		ФоновыеЗадания.Выполнить("УдалениеРезультатовЗаданийСервисовOneScriptАИТП.УдалитьРезультатыЗаданийСервиса", Параметры);
	
	КонецЦикла;

КонецПроцедуры

// Удаляет результаты асинхронных заданий выполнявшихся указанным сервисом
//
// Параметры:
//  Сервис	 - СправочникСсылка.СервисыOneScriptАИТП - сервис, на котором удаляются результаты
//
Процедура УдалитьРезультатыЗаданийСервиса(Сервис) Экспорт
	
	Попытка
		
		МенеджерЗаписи = РегистрыСведений.НастройкиУдаленияРезультатовЗаданийСервисовOneScriptАИТП.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Сервис = Сервис;
		МенеджерЗаписи.Прочитать();
		
		Если Не МенеджерЗаписи.Выбран() Тогда
			Возврат;
		КонецЕсли;
		
		OneScriptАИТП.УдалитьРезультатыВыполненияЗаданийСозданныхДоПериода(МенеджерЗаписи.ПериодУдаления, Сервис);
		
	Исключение
		
		Ошибка = ОписаниеОшибки();
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП.Ссылка КАК Ссылка
		                      |ИЗ
		                      |	БизнесПроцесс.ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП КАК ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП
		                      |ГДЕ
		                      |	ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП.ПометкаУдаления = &ПометкаУдаления
		                      |	И ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП.Завершен = &Завершен
		                      |	И ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП.Сервис = &Сервис");
		
		Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);
		Запрос.УстановитьПараметр("Завершен", Ложь);
		Запрос.УстановитьПараметр("Сервис", Сервис);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			
			БП = БизнесПроцессы.ОбработатьОшибкуУдаленияРезультатовЗаданийСервисаOneScriptАИТП.СоздатьБизнесПроцесс();
			БП.Дата = ТекущаяДата();
			БП.Сервис = Сервис;
			БП.ОписаниеОшибки = Ошибка;
			НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
			БП.Записать();
			БП.Старт();
			ЗафиксироватьТранзакцию();
			
		КонецЕсли;
		
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти