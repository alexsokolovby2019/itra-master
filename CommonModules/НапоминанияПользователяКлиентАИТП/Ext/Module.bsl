////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Реализует функционал напоминаний пользователя
// На основе БСП
// Вызывается из модуля управляемого приложения из процедуры ПриНачалеРаботыСистемы
// При внедрении в конфигурацию на базе БСП, вызов процедуры вставляется в обработчик:
// ОбщегоНазначенияКлиентПереопределяемый.ПриНачалеРаботыСистемы
//
////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура ПриНачалеРаботыСистемы() Экспорт
	
	Если НапоминанияПользователяВызовСервераАИТП.РазрешеноИспользованиеНапоминаний() 
		И НапоминанияПользователяВызовСервераАИТП.РазрешеныНапоминания() Тогда
		ПодключитьОбработчикОжидания("ПроверитьТекущиеНапоминанияАИТП", 60, Истина); // через 60 секунд после запуска клиента
	КонецЕсли;
	
КонецПроцедуры


// Открывает форму оповещения
Процедура ОткрытьФормуОповещения() Экспорт
	
	// Хранение формы в переменной требуется для предотвращения открытия дублей формы,
	// а также для уменьшения количества серверных вызовов.
	ИмяПараметра = "СтандартныеПодсистемы.ФормаОповещения";
	
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		
		ИмяФормыОповещения = "РегистрСведений.НапоминанияПользователяАИТП.Форма.ФормаОповещения";
		ПараметрыПриложения.Вставить(ИмяПараметра, ПолучитьФорму(ИмяФормыОповещения));
		
	КонецЕсли;
	
	ФормаОповещения = ПараметрыПриложения[ИмяПараметра];
	ФормаОповещения.Открыть();
	
КонецПроцедуры

// Возвращает кэшированные оповещения текущего пользователя, исключив из результата ненаступившие оповещения.
//
// Параметры
//  ВремяБлижайшего - Дата - в этот параметр возвращается время ближайшего будущего напоминания. Если
//                           ближайшее напоминание за пределами выборки кэша, то возвращается Неопределено.
Функция ПолучитьТекущиеОповещения(ВремяБлижайшего = Неопределено) Экспорт
	
	ТаблицаОповещений = НапоминанияПользователяКлиентПовтИспАИТП.ПолучитьНапоминанияТекущегоПользователя();
	Результат = Новый Массив;
	
	ВремяБлижайшего = Неопределено;
	
	Для Каждого Оповещение Из ТаблицаОповещений Цикл
		Если Оповещение.СрокНапоминания <= ТекущаяДата() Тогда
			Результат.Добавить(Оповещение);
		Иначе                                                           
			Если ВремяБлижайшего = Неопределено Тогда
				ВремяБлижайшего = Оповещение.СрокНапоминания;
			Иначе
				ВремяБлижайшего = Мин(ВремяБлижайшего, Оповещение.СрокНапоминания);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;		
	
	Возврат Результат;
	
КонецФункции

// Удаляет запись из кэша результата выполнения функции ПолучитьНапоминанияТекущегоПользователя()
Процедура УдалитьЗаписьИзКэшаОповещений(ПараметрыОповещения) Экспорт
	КэшОповещений = НапоминанияПользователяКлиентПовтИспАИТП.ПолучитьНапоминанияТекущегоПользователя();
	Запись = НайтиЗаписьВКэшеОповещений(КэшОповещений, ПараметрыОповещения);
	Если Запись <> Неопределено Тогда
		КэшОповещений.Удалить(КэшОповещений.Найти(Запись));
	КонецЕсли;
КонецПроцедуры

// Обновляет запись в кэше результата выполнения функции ПолучитьНапоминанияТекущегоПользователя()
Процедура ОбновитьЗаписьВКэшеОповещений(ПараметрыОповещения) Экспорт
	КэшОповещений = НапоминанияПользователяКлиентПовтИспАИТП.ПолучитьНапоминанияТекущегоПользователя();
	Запись = НайтиЗаписьВКэшеОповещений(КэшОповещений, ПараметрыОповещения);
	Если Запись <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Запись, ПараметрыОповещения);
	Иначе
		КэшОповещений.Добавить(ПараметрыОповещения);
	КонецЕсли;
КонецПроцедуры

// Возвращает запись из кэша результата выполнения функции ПолучитьНапоминанияТекущегоПользователя()
Функция НайтиЗаписьВКэшеОповещений(КэшОповещений, ПараметрыОповещения)
	Для Каждого Запись Из КэшОповещений Цикл
		Если Запись.Источник = ПараметрыОповещения.Источник
		   И Запись.ВремяСобытия = ПараметрыОповещения.ВремяСобытия Тогда
			Возврат Запись;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

// Сбрасывает таймер проверки текущих напоминаний и выполняет проверку немедленно.
Процедура СброситьТаймерПроверкиТекущихОповещений() Экспорт
	
	ОтключитьОбработчикОжидания("ПроверитьТекущиеНапоминанияАИТП");
	ПроверитьТекущиеНапоминанияАИТП();
	
КонецПроцедуры

#КонецОбласти



