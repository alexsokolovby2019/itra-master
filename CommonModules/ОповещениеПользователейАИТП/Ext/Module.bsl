///////////////////////////////////////////////////////////////////////////////////
//
// Функции оповещения пользователей. Стандартно реализованы оповещения по эл. почте
//
///////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Оповещает пользователей через внешние системы
//
// Параметры:
//  ПараметрыОповещения	 - Структура - структура, содержащая параметры оповещения 
//
Процедура ОповеститьПользователей(ПараметрыОповещения = Неопределено) Экспорт
	
	ПолучателиОповещения = Новый Массив;
	СтандартнаяОбработка = Истина;
	
	ОповещениеПользователейПереопределяемыйАИТП.ОпределитьПолучателейОповещения(
	    ПолучателиОповещения
		, ПараметрыОповещения
		, СтандартнаяОбработка
	);
		
	Если СтандартнаяОбработка = Истина Тогда
		ОпределитьПолучателейОповещенияСтандартнаяОбработка(ПолучателиОповещения, ПараметрыОповещения);
	КонецЕсли;
	
	Если ПолучателиОповещения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеПользователейПереопределяемыйАИТП.ОповеститьПользователей(ПолучателиОповещения, ПараметрыОповещения, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка = Истина Тогда
		ОповеститьПользователейСтандартнаяОбработка(ПолучателиОповещения, ПараметрыОповещения);
	КонецЕсли;
			
КонецПроцедуры

// Создает сруктуру параметров оповещения
// 
// Возвращаемое значение:
//   - Структура - структура, содержащая параметры оповещения
//
Функция НовыйПараметрыОповещения() Экспорт
	
	ПараметрыОповещения = Новый Соответствие;
	ПараметрыОповещения.Вставить("Задача", Неопределено);
	ПараметрыОповещения.Вставить("ТочкаМаршрута", Неопределено);
	ПараметрыОповещения.Вставить("МоментСоздания", Неопределено);
	ПараметрыОповещения.Вставить("БизнесПроцесс", Неопределено);
	ПараметрыОповещения.Вставить("ВидОповещения", Перечисления.ВидыОповещенийАИТП.ПустаяСсылка());
	
	Возврат ПараметрыОповещения;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Получает массив ссылок на элементы справочеика КонтактыАИТП, соответсвующий получателям оповещения
//  Редактирование кастомных получателей через процедуру:
//  ОповещенияПользователейЧерезВнешниеСистемыПереопределяемыйАИТП.ПолучитьПолучателейОповещения
//
// Параметры:
//  ПолучателиОповещения - список получателей оповещения 
//  ПараметрыОповещения	 - структура, содержащая параметры оповещения 
//
Процедура ОпределитьПолучателейОповещенияСтандартнаяОбработка(ПолучателиОповещения, ПараметрыОповещения) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧленствоВГруппахПолучателейОповещенийАИТП.Контакт КАК Контакт
	                      |ИЗ
	                      |	РегистрСведений.НастройкиАдресацииОповещенийАИТП КАК НастройкиАдресацииОповещенийАИТП
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЧленствоВГруппахКонтактовАИТП КАК ЧленствоВГруппахПолучателейОповещенийАИТП
	                      |		ПО НастройкиАдресацииОповещенийАИТП.ГруппаПолучателей = ЧленствоВГруппахПолучателейОповещенийАИТП.ГруппаПолучателей
	                      |ГДЕ
	                      |	НастройкиАдресацииОповещенийАИТП.ТочкаМаршрута = &ТочкаМаршрута
	                      |	И НастройкиАдресацииОповещенийАИТП.МоментСоздания = &МоментСоздания
	                      |	И НастройкиАдресацииОповещенийАИТП.ВидОповещения = &ВидОповещения
						  | И НастройкиАдресацииОповещенийАИТП.ГруппаПолучателей ССЫЛКА Справочник.ГруппыКонтактовАИТП
						  |ОБЪЕДИНИТЬ
						  |ВЫБРАТЬ РАЗЛИЧНЫЕ
						  | НастройкиАдресацииОповещенийАИТП1.ГруппаПолучателей КАК Контакт
						  |ИЗ 
						  | РегистрСведений.НастройкиАдресацииОповещенийАИТП КАК НастройкиАдресацииОповещенийАИТП1
	                      |ГДЕ
	                      |	НастройкиАдресацииОповещенийАИТП1.ТочкаМаршрута = &ТочкаМаршрута
	                      |	И НастройкиАдресацииОповещенийАИТП1.МоментСоздания = &МоментСоздания
	                      |	И НастройкиАдресацииОповещенийАИТП1.ВидОповещения = &ВидОповещения
						  | И НастройкиАдресацииОповещенийАИТП1.ГруппаПолучателей ССЫЛКА Справочник.КонтактыАИТП");
	
	Запрос.УстановитьПараметр("ТочкаМаршрута", ПараметрыОповещения.Получить("ТочкаМаршрута"));
	Запрос.УстановитьПараметр("МоментСоздания", ПараметрыОповещения.Получить("МоментСоздания"));
	Запрос.УстановитьПараметр("ВидОповещения", ПараметрыОповещения.Получить("ВидОповещения"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ПолучателиОповещения.Добавить(Выборка.Контакт);	
	КонецЦикла;
	
КонецПроцедуры

// Стандартный обработчик оповещения пользователей
//
// Параметры:
//  ПолучателиОповещения - список получателей оповещения 
//  ПараметрыОповещения	 - структура, содержащая параметры оповещения 
//
Процедура ОповеститьПользователейСтандартнаяОбработка(ПолучателиОповещения, ПараметрыОповещения)
	
	ОповещениеПользователейПоЭлектроннойПочтеАИТП.ОповеститьПользователей(ПолучателиОповещения, ПараметрыОповещения);	
	
КонецПроцедуры

#КонецОбласти

