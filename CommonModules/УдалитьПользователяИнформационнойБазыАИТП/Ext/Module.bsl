//////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Реализация действий бизнес-процесса УдалитьПользователяИнформационнойБазыАИТП
//
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Реализация регламентного задания для отправки http-запросов
//
Процедура УдалитьПользователейИнформационнойБазыАИТП() Экспорт
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ВыполнитьДействияПоТочкеМаршрута(
		БизнесПроцессы.УдалитьПользователяИнформационнойБазыАИТП.ТочкиМаршрута.УдалитьПользователяИнформационнойБазы
		, "УдалитьПользователяИнформационнойБазыАИТП.ОбработчикВыполнитьДействиеУдалитьПользователяИнформационнойБазы"
		, // Обработчик перед выполнением действий
		, // Обработчик после выполнения действий
		, // Обработчик ошибки при выполнении действия
		, // Обработчик ошибки перед выполнением действий
		, // Обработчик ошибки после выполнения действий
		, // Обработчик оповещения при выполнении действия
		, // Обработчик оповещения перед выполнением действий
		, // Обработчик оповещения после выполнения действий
	);

КонецПроцедуры

// Реализация действия изменения пользователя информационной базы
//
Процедура ОбработчикВыполнитьДействиеУдалитьПользователяИнформационнойБазы(ТочкаМаршрута, Задача, ПараметрыВыполнения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	БизнесПроцесс = Задача.БизнесПроцесс;
	
	Если Не БизнесПроцесс.УникальныйИдентификатор = "" Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(БизнесПроцесс.УникальныйИдентификатор));
	Иначе
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(БизнесПроцесс.Имя);
	КонецЕсли;
	
	ПользовательИБ.Удалить();
	
КонецПроцедуры

#КонецОбласти