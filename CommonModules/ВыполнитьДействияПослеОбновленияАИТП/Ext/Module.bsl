///////////////////////////////////////////////////////////////////////////////////
//
// Обработчики действий бизнес-процесса ВыполнитьДействияПослеОбновленияАИТП
//
//////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Включает регламентное задание для проверки окончания обновления
//
Процедура ПодключитьПроверкуОкончанияОбновления() Экспорт
	
	РегламентноеЗадание = РегламентныеЗадания.НайтиПредопределенное("ПроверитьОкончаниеОбновленияАИТП");
	РегламентноеЗадание.Использование = Истина;
	РегламентноеЗадание.Записать();

КонецПроцедуры

// Процедура - обработчик действия. Разрешает старт регламентных заданий.
//
// Параметры:
//  ТочкаМаршрута		 - ТочкаМаршрутаБизнесПроцесса	 - точка маршрута действия
//  Задача				 - ЗадачаОбъект.ЗадачаАИТП  - задача действия
//  ПараметрыВыполнения	 - Соответствие	 - параметры выполнения
//
Процедура РазрешитьСтартФоновыхЗаданийПроцессов(ТочкаМаршрута, Задача, ПараметрыВыполнения) Экспорт
	
	// Получаем параметры использования регламентных заданий
	ПараметрыИспользования = ОбновлениеСистемыАИТП.ПолучитьПараметрыИспользованияРегламентныхЗаданий(Задача.БизнесПроцесс);
	
	Если ПараметрыИспользования = Неопределено Тогда
		ПараметрыИспользования = Новый Соответствие;
	КонецЕсли;

	ОбновлениеСистемыАИТП.РазрешитьСтартФоновыхЗаданийПроцессов(ПараметрыИспользования);
	
	РегламентноеЗадание = РегламентныеЗадания.НайтиПредопределенное("ПроверитьОкончаниеОбновленияАИТП");
	РегламентноеЗадание.Использование = Ложь;
	РегламентноеЗадание.Записать();
	
	Задача.Результат = Перечисления.РезультатыВыполненияДействияАИТП.Положительный;
	Задача.Записать();
	Задача.ВыполнитьЗадачу();
	
КонецПроцедуры

// Процедура - обработчик регламентного задания ПроверитьОкончаниеОбновленияАИТП.
// Проверяет окончание обновления и возможность доступа в информационную базу
//
Процедура ПроверитьОкончаниеОбновления() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗадачаАИТП.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Задача.ЗадачаАИТП КАК ЗадачаАИТП
	                      |ГДЕ
	                      |	ЗадачаАИТП.ТочкаМаршрута = &ТочкаМаршрута
	                      |	И ЗадачаАИТП.Выполнена = &Выполнена
	                      |	И ЗадачаАИТП.ДатаВыполнения <= &ДатаВыполнения");
	
	Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.ВыполнитьДействияПослеОбновленияАИТП.ТочкиМаршрута.ОжидатьДоступностиИнформационнойБазы);
	Запрос.УстановитьПараметр("Выполнена", Ложь);
	Запрос.УстановитьПараметр("ДатаВыполнения", ТекущаяДата());
	
	Результат = Запрос.Выполнить().Выбрать();
	
    Выборка = Результат.Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		Задача = Выборка.Ссылка.ПолучитьОбъект();
		Задача.Результат = Перечисления.РезультатыВыполненияДействияАИТП.Положительный;
		Задача.Записать();
		Задача.ВыполнитьЗадачу();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
