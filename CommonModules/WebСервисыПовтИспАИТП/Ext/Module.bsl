////////////////////////////////////////////////////////////////////////////////
//
// Функции для работы с Web-сервисами
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Создает объект WsПрокси
//
// Параметры:
//  WebСервис	 - СправочникСсылка.WebСервисыАИТП	 - ссылка на параметры Web-сервиса
// 
// Возвращаемое значение:
// WsПрокси  - Объект WsПрокси для работы с Web-сервисом
//
Функция ПолучитьWsПрокси(WebСервис) Экспорт
	
	ЧастиUrl = ФункцииHttpАИТП.ПолучитьЧастиURL(WebСервис.СсылкаWSDL);
	НастройкиСоединения = WebСервис.НастройкиHTTPСоединения;
	Таймаут = НастройкиСоединения.Таймаут;
		
	ЗащищенноеСоединение = Неопределено;	
	
	Если ЧастиURL.Протокол = "HTTPS" Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();	
	КонецЕсли;
	
	Прокси = Неопределено;
	
	Если Не НастройкиСоединения.ПроксиСервер = Справочники.СетевыеХостыАИТП.ПустаяСсылка() Тогда
		
		Прокси = Новый ИнтернетПрокси;
		ПользовательПрокси = Неопределено;
		ПарольПрокси = Неопределено;
		
		Если НастройкиСоединения.ПроксиИспользоватьПроверкуПодлинностиОС = Ложь 
			И Не НастройкиСоединения.УчетныеДанныеПрокси = Справочники.УчетныеДанныеАИТП.ПустаяСсылка() Тогда
			
			ПользовательПрокси = НастройкиСоединения.УчетныеДанныеПрокси.Логин;
			
			УстановитьПривилегированныйРежим(Истина);
			ПарольПрокси = Справочники.УчетныеДанныеАИТП.ПолучитьПароль(НастройкиСоединения.УчетныеДанныеПрокси);
			УстановитьПривилегированныйРежим(Ложь);
			
		КонецЕсли;
		
		Если ПользовательПрокси = Неопределено Тогда
		Прокси.Установить(
			ЧастиUrl.Протокол
			, НастройкиСоединения.ПроксиСервер.ИмяХоста
			, НастройкиСоединения.ПортПрокси
			, //ПользовательПрокси
			, //ПарольПрокси
			, НастройкиСоединения.ПроксиИспользоватьПроверкуПодлинностиОС
		);
		Иначе
		Прокси.Установить(
			ЧастиUrl.Протокол
			, НастройкиСоединения.ПроксиСервер.ИмяХоста
			, НастройкиСоединения.ПортПрокси
			, ПользовательПрокси
			, ПарольПрокси
			, НастройкиСоединения.ПроксиИспользоватьПроверкуПодлинностиОС
		);
		КонецЕсли;
		
	КонецЕсли;
	
	Пользователь = Неопределено;
	Пароль = Неопределено;
	ИспользоватьПроверкуПодлинностиОС = НастройкиСоединения.ИспользоватьПроверкуПодлинностиОС;
	
	Если Не НастройкиСоединения.ИспользоватьПроверкуПодлинностиОС = Истина 
		И Не НастройкиСоединения.УчетныеДанные = Справочники.УчетныеДанныеАИТП.ПустаяСсылка() Тогда
		
		Пользователь = НастройкиСоединения.УчетныеДанные.Логин;
		
		УстановитьПривилегированныйРежим(Истина);
		Пароль = Справочники.УчетныеДанныеАИТП.ПолучитьПароль(НастройкиСоединения.УчетныеДанные);
		УстановитьПривилегированныйРежим(Ложь);

	КонецЕсли;
	
	Определения = Новый WSОпределения(
		WebСервис.СсылкаWSDL
		, Пользователь
		, Пароль
		, Прокси
		, Таймаут
		, ЗащищенноеСоединение
		, ИспользоватьПроверкуПодлинностиОС
	);
	
	Возврат Новый WSПрокси(
		Определения
		, WebСервис.URIПространстваИмен
		, WebСервис.ИмяСервиса
		, WebСервис.ИмяТочкиПодключения
		, Прокси
		, Таймаут
		, ЗащищенноеСоединение
		, WebСервис.URLСервиса
		, ИспользоватьПроверкуПодлинностиОС
	);

КонецФункции

#КонецОбласти