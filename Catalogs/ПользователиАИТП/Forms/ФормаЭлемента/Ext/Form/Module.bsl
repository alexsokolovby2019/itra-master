#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// Создание нового элемента.
		ИдентификаторПользователяИБ = Неопределено;
	Иначе
		ИдентификаторПользователяИБ = Новый УникальныйИдентификатор(Объект.Код);
	КонецЕсли;	
	
	ЗаполнитьРеквизиты(ИдентификаторПользователяИБ);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.Код = "" Тогда
		Отказ = Истина;
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран пользователь информационной базы.";
		СообщениеПользователю.Сообщить();
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(Объект.Код));
	
	Если ПользовательИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Попытка
		
		УстановитьРолиПользователюИБ(ПользовательИБ, СистемныеРоли);
		УстановитьРолиПользователюИБ(ПользовательИБ, ПрикладныеРоли);
		ПользовательИБ.Записать();
		
	Исключение
		
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПользователяИБ(Команда)
	
	ОткрытьФорму("Справочник.ПользователиАИТП.Форма.ПользователиИБ",,ЭтаФорма,истина,,,,ЭтаФорма.РежимОткрытияОкна);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	Объект.Код = Строка(ВыбранноеЗначение.ИдентификаторПользователяИБ);
	Объект.Наименование = ВыбранноеЗначение.ПолноеИмя;
	ЗаполнитьРеквизиты(ВыбранноеЗначение.ИдентификаторПользователяИБ);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизиты(ИдентификаторПользователяИБ)
	
	УстановитьПривилегированныйРежим(Истина);
	ЭтаФорма.Элементы.СистемныеРоли.ТолькоПросмотр = Истина;
	ЭтаФорма.Элементы.ПрикладныеРоли.ТолькоПросмотр = Истина;
	
	Если Не ИдентификаторПользователяИБ = Неопределено Тогда
		Пользователь = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ);
	КонецЕсли;

	Если Не Пользователь = Неопределено Тогда
		ЭтаФорма.Элементы.СистемныеРоли.ТолькоПросмотр = Ложь;
		ЭтаФорма.Элементы.ПрикладныеРоли.ТолькоПросмотр = Ложь;
	КонецЕсли;
			
	ЗаполнитьРеквизитыПользователяИБ(Пользователь);
	ЗаполнитьТаблицуРолей(СистемныеРоли
		, Метаданные.Подсистемы["БазовыеПодсистемыАИТП"].Подсистемы["РолиАИТП"].Состав //Метаданные.Подсистемы["БазовыеПодсистемыАИТП"].Подсистемы["РолиАИТП"].Подсистемы["СистемныеРоли"].Состав
		, Пользователь);
		
	ЗаполнитьТаблицуРолей(ПрикладныеРоли
		, Метаданные.Подсистемы["БазовыеПодсистемыПрикладныеРолиАИТП"].Состав
		, Пользователь);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРолей(ТаблицаРолей, СоставПодсистемы, ПользовательИБ = Неопределено)
	
	ТаблицаРолей.Очистить();
	
	Для Каждого Роль Из Метаданные.Роли Цикл
		
		Если СоставПодсистемы.Содержит(Роль) Тогда
			
			СтрокаРоль = ТаблицаРолей.Добавить();
			СтрокаРоль.Имя = Роль.Имя;
			СтрокаРоль.Синоним = Роль.Синоним;
			
			Если Не ПользовательИБ = Неопределено Тогда
				СтрокаРоль.Пометка = ПользовательИБ.Роли.Содержит(Роль);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры
	
&НаСервере
Процедура ЗаполнитьРеквизитыПользователяИБ(ПользовательИБ)
	
	Если Не ПользовательИБ = Неопределено Тогда
		ПользовательИБИмя = ПользовательИБ.Имя;
		ПользовательИБПолноеИмя = ПользовательИБ.ПолноеИмя;
		ПользовательИБПользовательОС = ПользовательИБ.ПользовательОС;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРолиПользователюИБ(ПользовательИБ, ТаблицаРолей)
	
	Для Каждого СтрокаРоль Из ТаблицаРолей Цикл
		
		Роль = Метаданные.Роли.Найти(СтрокаРоль.Имя);
		СодержитРоль = ПользовательИБ.Роли.Содержит(Роль);
		
		Если СодержитРоль И НЕ СтрокаРоль.Пометка Тогда
			
			ПользовательИБ.Роли.Удалить(Роль);
			
		ИначеЕсли НЕ СодержитРоль И СтрокаРоль.Пометка Тогда
			
			ПользовательИБ.Роли.Добавить(Роль);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
