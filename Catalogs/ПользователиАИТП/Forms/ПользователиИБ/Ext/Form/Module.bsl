#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПользователиИБ.Очистить();
	ВсеПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для Каждого ТекПользовательИБ Из ВсеПользователиИБ Цикл
		
		Если Справочники.ПользователиАИТП.НайтиПоКоду(Строка(ТекПользовательИБ.УникальныйИдентификатор))
			= Справочники.ПользователиАИТП.ПустаяСсылка() Тогда
			
			СтрокаТекПользовательИБ = ПользователиИБ.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТекПользовательИБ, ТекПользовательИБ);
			СтрокаТекПользовательИБ.ИдентификаторПользователяИБ = ТекПользовательИБ.УникальныйИдентификатор;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПользователиИБ

&НаКлиенте
Процедура ПользователиИБВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	РезультатВыбора = ПолучитьСвойстваПользователяИБ(Элемент.ТекущиеДанные);
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиИБВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	РезультатВыбора = ПолучитьСвойстваПользователяИБ(Элемент.ТекущиеДанные);
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьСвойстваПользователяИБ(Данные)
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("Имя", Данные.Имя);
	РезультатВыбора.Вставить("ПолноеИмя", Данные.ПолноеИмя);
	РезультатВыбора.Вставить("АутентификацияСтандартная", Данные.АутентификацияСтандартная);
	РезультатВыбора.Вставить("АутентификацияОС", Данные.АутентификацияОС);
	РезультатВыбора.Вставить("ПользовательОС", Данные.ПользовательОС);
	РезультатВыбора.Вставить("ИдентификаторПользователяИБ", Данные.ИдентификаторПользователяИБ);
	РезультатВыбора.Вставить("РежимЗапуска", Данные.РежимЗапуска);
	РезультатВыбора.Вставить("Язык", Данные.Язык);
	
	Возврат РезультатВыбора;
	
КонецФункции

#КонецОбласти

