
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьСкрипт(Команда)
	
	ВыполнитьСкриптНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьМетод(Команда)
	
	ВыполнитьМетодНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьСкриптНаСервере()
	
	ДанныеПараметры = Новый Соответствие;
	
	Для каждого Параметр Из Объект.Параметры Цикл
		ДанныеПараметры.Вставить(Параметр.Имя, Параметр.Значение);	
	КонецЦикла;
	
	Данные = OneScriptАИТП.ВыполнитьСкрипт(Объект.СкриптБлок, ДанныеПараметры, Объект.ВыполнитьАсинхронно, Объект.ВозвращатьПараметры, Объект.HTTPСервис);
	
	ЗаполнитьДеревоЗначений(Данные, "Объект.Результаты");
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Объект.РезультатыТекст = ЗаписьJSON.Закрыть();
	
	Если Объект.ВыполнитьАсинхронно = Истина И Данные["БылиОшибки"] = Ложь Тогда
		Объект.URLСервиса = Данные["Результат"]["URLСервиса"];
		Объект.ИдентификаторЗадания = Данные["Результат"]["ИдентификаторЗадания"];
		Объект.Ключ = Данные["Результат"]["Ключ"];
	Иначе
		Объект.URLСервиса = "";
		Объект.ИдентификаторЗадания = "";
		Объект.Ключ = "";
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьМетодНаСервере()
	
	ПараметрыМетода = Новый Массив;
	Для каждого Параметр Из Объект.Параметры Цикл
	
		ПараметрыМетода.Добавить(Параметр.Значение);
	
	КонецЦикла; 
	
	Данные = OneScriptАИТП.ВыполнитьМетод(Объект.ИмяМетода, ПараметрыМетода, Объект.ВозвращаетЗначение, Объект.ВозвращатьПараметры, Объект.HTTPСервис);
	
	ЗаполнитьДеревоЗначений(Данные, "Объект.Результаты");
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Объект.РезультатыТекст = ЗаписьJSON.Закрыть();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоЗначений(Рез, СтрРеквизит)
		
	Дерево = РеквизитФормыВЗначение(СтрРеквизит);
	Дерево.Строки.Очистить();
	
	ДобавитьВДерево(Дерево, Рез);
	ЗначениеВРеквизитФормы(Дерево, СтрРеквизит);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВДерево(ЭлементДереваЗначений, Родитель)
	
	Для Каждого Элемент Из Родитель Цикл
		НовыйЭлементДерева = ЭлементДереваЗначений.Строки.Добавить();
		НовыйЭлементДерева.Имя = Элемент.Ключ;
		
		Если ТипЗнч(Элемент.Значение) = Тип("Строка") Тогда
			
			НовыйЭлементДерева.Тип = "Строка";
			НовыйЭлементДерева.Значение = Элемент.Значение;
			
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Число") Тогда
			
			НовыйЭлементДерева.Тип = "Число";
			НовыйЭлементДерева.Значение = Элемент.Значение;
			
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Булево") Тогда
			
			НовыйЭлементДерева.Тип = "Булево";
			НовыйЭлементДерева.Значение = Элемент.Значение;

		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Дата") Тогда
			
			НовыйЭлементДерева.Тип = "Дата";
			НовыйЭлементДерева.Значение = Элемент.Значение;
			
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Массив") Тогда
			
			НовыйЭлементДерева.Тип = "Массив";
			Индекс = 0;
			Для Каждого ДочернийЭлемент Из Элемент.Значение Цикл
				ВлЭлДер = НовыйЭлементДерева.Строки.Добавить();
				ВлЭлДер.Имя = "[" + Строка(Индекс) + "]";
				
				Если ТипЗнч(ДочернийЭлемент) = Тип("Строка") Тогда
					
					ВлЭл = ВлЭлДер.Строки.Добавить();
					ВлЭл.Тип = "Строка";
					ВлЭл.Значение = ДочернийЭлемент;
					
				ИначеЕсли ТипЗнч(ДочернийЭлемент) = Тип("Число") Тогда
					
					ВлЭл = ВлЭлДер.Строки.Добавить();
					ВлЭл.Тип = "Число";
					ВлЭл.Значение = ДочернийЭлемент;
					
				ИначеЕсли ТипЗнч(ДочернийЭлемент) = Тип("Булево") Тогда
					
					ВлЭл = ВлЭлДер.Строки.Добавить();
					ВлЭл.Тип = "Булево";
					ВлЭл.Значение = ДочернийЭлемент;
					
				ИначеЕсли ТипЗнч(ДочернийЭлемент) = Тип("Дата") Тогда
					
					ВлЭл = ВлЭлДер.Строки.Добавить();
					ВлЭл.Тип = "Дата";
					ВлЭл.Значение = ДочернийЭлемент;
	
				Иначе
					
					ДобавитьВДерево(ВлЭлДер, ДочернийЭлемент);
					
				КонецЕсли;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			
			НовыйЭлементДерева.Тип = "Структура";
			ДобавитьВДерево(НовыйЭлементДерева, Элемент.Значение);
			
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Соответствие") Тогда
			
			НовыйЭлементДерева.Тип = "Соответствие";
			ДобавитьВДерево(НовыйЭлементДерева, Элемент.Значение);

		КонецЕсли;
		
	КонецЦикла;
	          
КонецПроцедуры

&НаСервере
Процедура ЗаданиеАктивноНаСервере()
	// Вставить содержимое обработчика.
	Задание = Новый Соответствие;
	Задание.Вставить("URLСервиса", Объект.URLСервиса);
	Задание.Вставить("ИдентификаторЗадания", Объект.ИдентификаторЗадания );
	Задание.Вставить("Ключ", Объект.Ключ);
	
	Сообщить ("Активность задания:" + Строка(OneScriptАИТП.ЗаданиеАктивно(Задание)));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаданиеАктивно(Команда)
	ЗаданиеАктивноНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьРезультатыНаСервере()
	// Вставить содержимое обработчика.
	Задание = Новый Соответствие;
	Задание.Вставить("URLСервиса", Объект.URLСервиса);
	Задание.Вставить("ИдентификаторЗадания", Объект.ИдентификаторЗадания );
	Задание.Вставить("Ключ", Объект.Ключ);

	Данные = OneScriptАИТП.ПолучитьРезультатВыполненияЗадания(Задание);
	ЗаполнитьДеревоЗначений(Данные, "Объект.Результаты");
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Объект.РезультатыТекст = ЗаписьJSON.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРезультаты(Команда)
	ПолучитьРезультатыНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьРезультатыНаСервере()
	// Вставить содержимое обработчика.
	Задание = Новый Соответствие;
	Задание.Вставить("URLСервиса", Объект.URLСервиса);
	Задание.Вставить("ИдентификаторЗадания", Объект.ИдентификаторЗадания );
	Задание.Вставить("Ключ", Объект.Ключ);

	OneScriptАИТП.УдалитьРезультатВыполненияЗадания(Задание);
	
	Сообщить("Данные удалены");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРезультаты(Команда)
	УдалитьРезультатыНаСервере();
КонецПроцедуры

#КонецОбласти