&НаКлиенте
Перем Расписание; // Редактируемое расписание

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Расписание = ПолучитьРасписаниеРегламентногоЗадания(РегламентноеЗаданиеИД);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для Каждого Метаданное из Метаданные.РегламентныеЗадания Цикл
		Элементы.МетаданныеВыбор.СписокВыбора.Добавить(Метаданное.Имя, Метаданное.Представление());
	КонецЦикла;
	
	Попытка
		ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Исключение
		Ошибка = ОписаниеОшибки();
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Ошибка при получении списка пользователей информационной базы: " + Ошибка;
		СообщениеПользователю.Сообщить();
		ПользователиИБ = Неопределено;
	КонецПопытки;
	
	Если ПользователиИБ <> Неопределено Тогда
		
		Для Каждого Пользователь из ПользователиИБ Цикл
			Элементы.ПользователиВыбор.СписокВыбора.Добавить(Пользователь.Имя, Пользователь.ПолноеИмя);
		КонецЦикла;
	
	КонецЕсли;

	мВозможностьИзменятьМетаданные = Истина;
	
	РегламентноеЗаданиеИД = Параметры.ИдентификаторЗадания;
	РегламентноеЗадание = Обработки.КонсольЗаданийАИТП.Создать().ПолучитьОбъектРегламентногоЗадания(РегламентноеЗаданиеИД);
	Если РегламентноеЗадание <> Неопределено Тогда
		
		МетаданныеВыбор = РегламентноеЗадание.Метаданные.Имя;
		
		мВозможностьИзменятьМетаданные = Ложь;
		Наименование = РегламентноеЗадание.Наименование;
		Ключ = РегламентноеЗадание.Ключ;
		Использование = РегламентноеЗадание.Использование;
		ПользователиВыбор = РегламентноеЗадание.ИмяПользователя;
		КоличествоПовторовПриАварийномЗавершении = РегламентноеЗадание.КоличествоПовторовПриАварийномЗавершении;
		ИнтервалПовтораПриАварийномЗавершении = РегламентноеЗадание.ИнтервалПовтораПриАварийномЗавершении;
		
		Расписание = РегламентноеЗадание.Расписание;
	Иначе
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Элементы.МетаданныеВыбор.Доступность = мВозможностьИзменятьМетаданные;
	Элементы.НадписьРасписание.Заголовок = "Выполнять: " + Строка(Расписание);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИзменитьРасписаниеНажатие(Элемент)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Расписание", Расписание);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикЗакрытияДиалогаРасписанияРегламентногоЗадания", ЭтаФорма, ДополнительныеПараметры);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикЗакрытияДиалогаРасписанияРегламентногоЗадания(НовоеРасписание, ДополнительныеПараметры) Экспорт
	
	Если Не НовоеРасписание = Неопределено Тогда
		
		Расписание = НовоеРасписание;
		Элементы.НадписьРасписание.Заголовок = "Выполнять: " + Строка(НовоеРасписание);
		
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	Если ЗаписатьРегламентноеЗадание(Расписание) Тогда
		Закрыть(РегламентноеЗаданиеИД);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗаписатьРегламентноеЗадание(Расписание)
	
	Попытка
		
		Если МетаданныеВыбор = Неопределено ИЛИ МетаданныеВыбор = "" Тогда
			ВызватьИсключение("Не выбраны метаданные регламентного задания.");
		КонецЕсли;
		
		РегламентноеЗадание = Обработки.КонсольЗаданийАИТП.Создать().ПолучитьОбъектРегламентногоЗадания(РегламентноеЗаданиеИД);
		
		Если РегламентноеЗадание = Неопределено Тогда
			РегламентноеЗадание = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданныеВыбор);
			РегламентноеЗаданиеИД = РегламентноеЗадание.УникальныйИдентификатор;
		КонецЕсли;
		
		РегламентноеЗадание.Наименование = Наименование;
		РегламентноеЗадание.Ключ = Ключ;
		РегламентноеЗадание.Использование = Использование;
		РегламентноеЗадание.ИмяПользователя = ПользователиВыбор;
		РегламентноеЗадание.КоличествоПовторовПриАварийномЗавершении = КоличествоПовторовПриАварийномЗавершении;
		РегламентноеЗадание.ИнтервалПовтораПриАварийномЗавершении = ИнтервалПовтораПриАварийномЗавершении;
		РегламентноеЗадание.Расписание = Расписание;
		
		РегламентноеЗадание.Записать();
		
	Исключение	
		
		Ошибка = ОписаниеОшибки();
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Ошибка: " + Ошибка;
		СообщениеПользователю.Сообщить();
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьРасписаниеРегламентногоЗадания(УникальныйНомерЗадания)
	
	ОбъектЗадания = Обработки.КонсольЗаданийАИТП.Создать().ПолучитьОбъектРегламентногоЗадания(УникальныйНомерЗадания);
	
	Если ОбъектЗадания = Неопределено Тогда
		Возврат Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Возврат ОбъектЗадания.Расписание;
	
КонецФункции

#КонецОбласти
