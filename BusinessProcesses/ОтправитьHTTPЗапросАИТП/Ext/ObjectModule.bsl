#Область СлужебныеПроцедурыИФункции

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПередСтартомБП(ТочкаМаршрутаБизнесПроцесса, ЭтотОбъект);
	
КонецПроцедуры

Процедура ОтправитьHTTPЗапросПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.Действие
		, "ОтправитьHTTPЗапросыАИТП");
	
КонецПроцедуры

Процедура ОтправитьHTTPЗапросПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(ТочкаМаршрутаБизнесПроцесса, Задача);
	
КонецПроцедуры

Процедура АнализРезультатаОтправкиHTTPЗапросаОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаРезультатПоложительныйОтрицательныйОшибка(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ОтправитьHTTPЗапросАИТП.ТочкиМаршрута.ОтправитьHTTPЗапрос
	);
	
КонецПроцедуры

Процедура ПодождатьПовторногоВыполненияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	ФормируемыеЗадачи[0].Дата = ТекущаяДата() + ЭтотОбъект.ИнтервалМеждуПопытками;
	БизнесПроцессыАИТП.ПриСозданииЗадачи(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи[0], Перечисления.ВидыЗадачАИТП.Ожидание);
	
КонецПроцедуры

Процедура КоличествоПовторенийМеньшеДопустимогоПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Вставить содержимое обработчика.
	ПоследняяЗадача = БизнесПроцессыАИТП.ПолучитьИнформациюОПоследнейВыполненнойЗадаче(
		ЭтотОбъект,
		БизнесПроцессы.ОтправитьHTTPЗапросАИТП.ТочкиМаршрута.ОтправитьHTTPЗапрос
	);
	
	Если  ПоследняяЗадача.КоличествоВыполнений < ЭтотОбъект.КоличествоПопыток Тогда
		Результат = Истина;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодождатьПовторногоВыполненияПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(ТочкаМаршрутаБизнесПроцесса, Задача);
	
КонецПроцедуры

Процедура ОбработатьОшибкуОтправкиHTTPЗапросаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	ЗадачаСОшибкой = БизнесПроцессыАИТП.ПолучитьИнформациюОПоследнейВыполненнойЗадаче(ЭтотОбъект.Ссылка, БизнесПроцессы.ОтправитьHTTPЗапросАИТП.ТочкиМаршрута.ОтправитьHTTPЗапрос);
	ФормируемыеЗадачи[0].ОшибкаДляОбработки = ЗадачаСОшибкой.Задача.Ошибка;

	БизнесПроцессыАИТП.ПриСозданииЗадачи(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи[0], Перечисления.ВидыЗадачАИТП.ОбработкаОшибки);
	
КонецПроцедуры

Процедура ОбработатьОшибкуОтправкиHTTPЗапросаПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(ТочкаМаршрутаБизнесПроцесса, Задача);
	
КонецПроцедуры

Процедура АнализРезультатаОбработкиОшибкиОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаПродолжитьПовторитьЗавершитьОтменить(
					ТочкаВыбораВарианта
					, ЭтотОбъект
					, БизнесПроцессы.ОтправитьHTTPЗапросАИТП.ТочкиМаршрута.ОбработатьОшибкуОтправкиHTTPЗапроса
				);
	
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриЗавершенииБП(
		ТочкаМаршрутаБизнесПроцесса
		, ЭтотОбъект
		, Перечисления.РезультатыВыполненияДействияАИТП.Положительный
		, Перечисления.ДальнейшиеДействияАИТП.Продолжить
		);
	
КонецПроцедуры

Процедура ЗавершениеОтменитьПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриЗавершенииБП(ТочкаМаршрутаБизнесПроцесса
		, ЭтотОбъект
		, Перечисления.РезультатыВыполненияДействияАИТП.Отрицательный
		, Перечисления.ДальнейшиеДействияАИТП.Отменить
		);

КонецПроцедуры

Процедура ЗавершениеЗавершитьПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриЗавершенииБП(ТочкаМаршрутаБизнесПроцесса
		, ЭтотОбъект
		, Перечисления.РезультатыВыполненияДействияАИТП.Отрицательный
		, Перечисления.ДальнейшиеДействияАИТП.Завершить
		);

КонецПроцедуры

#КонецОбласти