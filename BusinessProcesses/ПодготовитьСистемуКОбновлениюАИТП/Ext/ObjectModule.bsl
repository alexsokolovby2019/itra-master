
Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПередСтартомБП(
		ТочкаМаршрутаБизнесПроцесса
		, ЭтотОбъект
		);
		
КонецПроцедуры

Процедура ЗапретитьСтартФоновыхЗаданийПроцессовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.Действие
		, 
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
	БизнесПроцессыАИТП.ВыполнитьДействиеПоЗадачеАсинхронно(
		ФормируемыеЗадачи[0].Ссылка
		, "ПодготовитьСистемуКОбновлениюАИТП.ЗапретитьСтартФоновыхЗаданийПроцессов"
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура РезультатЗапретаСтартаФоновыхЗаданийПроцессовОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаРезультатПоложительныйОтрицательныйОшибка(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ЗапретитьСтартФоновыхЗаданийПроцессов
		);
		
КонецПроцедуры

Процедура ОтменитьПриВозникновенииОшибокПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Вставить содержимое обработчика.
	Результат = ЭтотОбъект.ОтменитьПриВозникновенииОшибок;
	
КонецПроцедуры

Процедура ОбработатьОшибкуЗапретаСтартаФоновыхЗаданийПроцессовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	ЗадачаСОшибкой = БизнесПроцессыАИТП.ПолучитьИнформациюОПоследнейВыполненнойЗадаче(
		ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ЗапретитьСтартФоновыхЗаданийПроцессов
		).Задача;
	ФормируемыеЗадачи[0].ОшибкаДляОбработки = ЗадачаСОшибкой.Ошибка;
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.ОбработкаОшибки
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ОбработатьОшибкуЗапретаСтартаФоновыхЗаданийПроцессовПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура РезультатОбработкиОшибкиЗапретаСтартаФоновыхЗаданийПроцессовОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаПродолжитьПовторитьЗавершитьОтменить(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ОбработатьОшибкуЗапретаСтартаФоновыхЗаданийПроцессов
		);
		
КонецПроцедуры

Процедура ПодождатьЗавершенияФоновыхЗаданийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.Действие
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ПодождатьЗавершенияФоновыхЗаданийПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ПроверитьЗавершениеФоновыхЗаданийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.Действие
		, 
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
	БизнесПроцессыАИТП.ВыполнитьДействиеПоЗадачеАсинхронно(
	ФормируемыеЗадачи[0].Ссылка
	, "ПодготовитьСистемуКОбновлениюАИТП.ПроверитьЗавершениеФоновыхЗаданий"
	,
	, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
	);
КонецПроцедуры

Процедура ПроверитьЗавершениеФоновыхЗаданийПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура РезультатПроверкиЗавершенияФоновыхЗаданийОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаРезультатПоложительныйОтрицательныйОшибка(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ПроверитьЗавершениеФоновыхЗаданий
		);
		
КонецПроцедуры

Процедура ОтменитьПриВозникновенииОшибок4ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Вставить содержимое обработчика.
	Результат = ЭтотОбъект.ОтменитьПриВозникновенииОшибок;
	
КонецПроцедуры

Процедура ОбработатьОшибкуПроверкиЗавершенияФоновыхЗаданийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	ЗадачаСОшибкой = БизнесПроцессыАИТП.ПолучитьИнформациюОПоследнейВыполненнойЗадаче(
		ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ПроверитьЗавершениеФоновыхЗаданий
		).Задача;
	ФормируемыеЗадачи[0].ОшибкаДляОбработки = ЗадачаСОшибкой.Ошибка;
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.ОбработкаОшибки
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ОбработатьОшибкуПроверкиЗавершенияФоновыхЗаданийПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура РезультатОбработкиОшибкиПроверкиЗавершенияФоновыхЗаданийОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаПродолжитьПовторитьЗавершитьОтменить(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ОбработатьОшибкуПроверкиЗавершенияФоновыхЗаданий
		);
		
КонецПроцедуры

Процедура ПревышеноКоличествоПопытокПроверкиЗавершенияФоновыхЗаданийПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Вставить содержимое обработчика.
	Информация = БизнесПроцессыАИТП.ПолучитьИнформациюОПоследнейВыполненнойЗадаче(
		ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ПроверитьЗавершениеФоновыхЗаданий
		);
	Результат = Информация.КоличествоВыполнений > Константы.КоличествоПроверокЗавершенияФоновыхЗаданийПередОбновлениемАИТП.Получить();
	
КонецПроцедуры

Процедура ОтключитьОбработчикОжиданияЗавершенияФоновыхЗаданийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.Действие
		, 
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
	БизнесПроцессыАИТП.ВыполнитьДействиеПоЗадачеАсинхронно(
		ФормируемыеЗадачи[0].Ссылка
		, "ПодготовитьСистемуКОбновлениюАИТП.ОтключитьОбработчикОжиданияЗавершенияФоновыхЗаданий"
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ОтключитьОбработчикОжиданияЗавершенияФоновыхЗаданийПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура РезультатОтключенияОбработчикаОжиданияЗавершенияФоновыхЗаданийОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаРезультатПоложительныйОтрицательныйОшибка(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ОтключитьОбработчикОжиданияЗавершенияФоновыхЗаданий
		);
		
КонецПроцедуры

Процедура ОбработатьОшибкуОтключенияОбработчикаОжиданияЗавершенияФоновыхЗаданийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	ЗадачаСОшибкой = БизнесПроцессыАИТП.ПолучитьИнформациюОПоследнейВыполненнойЗадаче(
		ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ОтключитьОбработчикОжиданияЗавершенияФоновыхЗаданий
		).Задача;
	ФормируемыеЗадачи[0].ОшибкаДляОбработки = ЗадачаСОшибкой.Ошибка;
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.ОбработкаОшибки
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ОбработатьОшибкуОтключенияОбработчикаОжиданияЗавершенияФоновыхЗаданийПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ОбработкаОшибкиОтключенияОбработчикаОжиданияЗавершенияФоновыхЗаданийОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаПродолжитьПовторитьЗавершитьОтменить(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ОбработатьОшибкуОтключенияОбработчикаОжиданияЗавершенияФоновыхЗаданий
		);
		
КонецПроцедуры

Процедура ЗавершениеПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриЗавершенииБП(
		ТочкаМаршрутаБизнесПроцесса
		, ЭтотОбъект
		, Перечисления.РезультатыВыполненияДействияАИТП.Положительный
		, Перечисления.ДальнейшиеДействияАИТП.Продолжить
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

Процедура ЗавершениеЗавершитьПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриЗавершенииБП(
		ТочкаМаршрутаБизнесПроцесса
		, ЭтотОбъект
		, Перечисления.РезультатыВыполненияДействияАИТП.Отрицательный
		, Перечисления.ДальнейшиеДействияАИТП.Завершить
		, 
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);

КонецПроцедуры

Процедура РазрешитьСтартФоновыхЗаданийПроцессовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.Действие
		, 
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
	БизнесПроцессыАИТП.ВыполнитьДействиеПоЗадачеАсинхронно(
		ФормируемыеЗадачи[0].Ссылка
		, "ПодготовитьСистемуКОбновлениюАИТП.РазрешитьСтартФоновыхЗаданийПроцессов"
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры


Процедура РазрешитьСтартФоновыхЗаданийПроцессовПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры


Процедура РезультатРазрешенияСтартаФоновыхЗаданийПроцессовОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаРезультатПоложительныйОтрицательныйОшибка(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.РазрешитьСтартФоновыхЗаданийПроцессов
		);
		
КонецПроцедуры


Процедура ОбработатьОшибкуРазрешенияСтартаФоновыхЗаданийПроцессовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	ЗадачаСОшибкой = БизнесПроцессыАИТП.ПолучитьИнформациюОПоследнейВыполненнойЗадаче(
		ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.РазрешитьСтартФоновыхЗаданийПроцессов
		).Задача;
	ФормируемыеЗадачи[0].ОшибкаДляОбработки = ЗадачаСОшибкой.Ошибка;
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.ОбработкаОшибки
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры


Процедура ОбработатьОшибкуРазрешенияСтартаФоновыхЗаданийПроцессовПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры


Процедура РезультатОбработкиОшибкиРазрешенияСтартаФоновыхЗаданийПроцессовОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	Результат = БизнесПроцессыАИТП.ВыборВариантаПродолжитьПовторитьЗавершитьОтменить(
		ТочкаВыбораВарианта
		, ЭтотОбъект
		, БизнесПроцессы.ПодготовитьСистемуКОбновлениюАИТП.ТочкиМаршрута.ОбработатьОшибкуРазрешенияСтартаФоновыхЗаданийПроцессов
		);
		
КонецПроцедуры


Процедура ЗавершениеОтменитьПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриЗавершенииБП(
		ТочкаМаршрутаБизнесПроцесса
		, ЭтотОбъект
		, Перечисления.РезультатыВыполненияДействияАИТП.Отрицательный
		, Перечисления.ДальнейшиеДействияАИТП.Отменить
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры


Процедура ЗапретитьСтартФоновыхЗаданийПроцессовПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры


Процедура ПодождатьДоДатыНачалаОбновленияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	// Вставить содержимое обработчика.
	Если ЭтотОбъект.ДатаНачала = '00010101' Или ЭтотОбъект.ДатаНачала = Неопределено Тогда
		ФормируемыеЗадачи[0].ДатаВыполнения = ТекущаяДата();
	Иначе
		ФормируемыеЗадачи[0].ДатаВыполнения = ЭтотОбъект.ДатаНачала;
	КонецЕсли;
	
	БизнесПроцессыАИТП.ПриСозданииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, ФормируемыеЗадачи[0]
		, Перечисления.ВидыЗадачАИТП.Ожидание
		,
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры


Процедура ПодождатьДоДатыНачалаОбновленияПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
	БизнесПроцессыАИТП.ПриВыполненииЗадачи(
		ТочкаМаршрутаБизнесПроцесса
		, Задача
		, "ОбновлениеСистемыАИТП.ОбработчикОповещения"
		);
		
КонецПроцедуры

